# initializing database system by copying initdb template
# using temp instance on port 65312 with PID 40208
ok 1         - test_setup                                 95 ms
# parallel group (20 tests):  char varchar name oid pg_lsn int2 text txid int4 boolean uuid float4 int8 money regproc bit float8 enum numeric rangetypes
ok 2         + boolean                                    41 ms
ok 3         + char                                       22 ms
ok 4         + name                                       27 ms
ok 5         + varchar                                    23 ms
ok 6         + text                                       35 ms
ok 7         + int2                                       34 ms
ok 8         + int4                                       36 ms
ok 9         + int8                                       43 ms
ok 10        + oid                                        28 ms
ok 11        + float4                                     41 ms
ok 12        + float8                                     49 ms
ok 13        + bit                                        46 ms
ok 14        + numeric                                   111 ms
ok 15        + txid                                       33 ms
ok 16        + uuid                                       37 ms
ok 17        + enum                                       51 ms
ok 18        + money                                      40 ms
ok 19        + rangetypes                                130 ms
ok 20        + pg_lsn                                     29 ms
ok 21        + regproc                                    39 ms
# parallel group (20 tests):  md5 lseg path circle line time macaddr point timetz macaddr8 numerology inet date interval strings polygon box multirangetypes timestamp timestamptz
ok 22        + strings                                    70 ms
ok 23        + md5                                        21 ms
ok 24        + numerology                                 38 ms
ok 25        + point                                      32 ms
ok 26        + lseg                                       23 ms
ok 27        + line                                       26 ms
ok 28        + box                                        87 ms
ok 29        + path                                       23 ms
ok 30        + polygon                                    83 ms
ok 31        + circle                                     23 ms
ok 32        + date                                       42 ms
ok 33        + time                                       27 ms
ok 34        + timetz                                     31 ms
ok 35        + timestamp                                 359 ms
ok 36        + timestamptz                               370 ms
ok 37        + interval                                   54 ms
ok 38        + inet                                       37 ms
ok 39        + macaddr                                    26 ms
ok 40        + macaddr8                                   31 ms
ok 41        + multirangetypes                            91 ms
# parallel group (13 tests):  comments misc_sanity unicode xid mvcc expressions tstypes type_sanity geometry horology regex database opr_sanity
ok 42        + geometry                                   46 ms
ok 43        + horology                                   55 ms
ok 44        + tstypes                                    38 ms
ok 45        + regex                                     140 ms
ok 46        + type_sanity                                45 ms
ok 47        + opr_sanity                               3429 ms
ok 48        + misc_sanity                                17 ms
ok 49        + comments                                   16 ms
ok 50        + expressions                                33 ms
ok 51        + unicode                                    17 ms
ok 52        + xid                                        27 ms
ok 53        + mvcc                                       30 ms
ok 54        + database                                  356 ms
# parallel group (5 tests):  copyselect copydml copy insert_conflict insert
ok 55        + copy                                       81 ms
ok 56        + copyselect                                 34 ms
ok 57        + copydml                                    34 ms
ok 58        + insert                                    227 ms
ok 59        + insert_conflict                           130 ms
# parallel group (7 tests):  create_function_c create_operator create_schema create_type create_misc create_procedure create_table
ok 60        + create_function_c                          23 ms
ok 61        + create_misc                                53 ms
ok 62        + create_operator                            40 ms
ok 63        + create_procedure                           57 ms
ok 64        + create_table                              183 ms
ok 65        + create_type                                48 ms
ok 66        + create_schema                              41 ms
# parallel group (5 tests):  index_including index_including_gist create_index_spgist create_view create_index
ok 67        + create_index                              293 ms
ok 68        + create_index_spgist                       175 ms
ok 69        + create_view                               178 ms
ok 70        + index_including                           135 ms
ok 71        + index_including_gist                      136 ms
# parallel group (16 tests):  create_cast hash_func errors create_aggregate roleattributes select typed_table drop_if_exists infinite_recurse create_function_sql create_am constraints vacuum updatable_views inherit triggers
ok 72        + create_aggregate                           45 ms
ok 73        + create_function_sql                        92 ms
ok 74        + create_cast                                25 ms
ok 75        + constraints                               141 ms
ok 76        + triggers                                  337 ms
ok 77        + select                                     64 ms
ok 78        + inherit                                   273 ms
ok 79        + typed_table                                71 ms
ok 80        + vacuum                                    185 ms
ok 81        + drop_if_exists                             81 ms
ok 82        + updatable_views                           253 ms
ok 83        + roleattributes                             56 ms
ok 84        + create_am                                  97 ms
ok 85        + hash_func                                  33 ms
ok 86        + errors                                     37 ms
ok 87        + infinite_recurse                           81 ms
ok 88        - sanity_check                               55 ms
# parallel group (20 tests):  select_distinct_on select_having delete select_implicit case random namespace select_into prepared_xacts select_distinct union portals transactions subselect arrays update aggregates join hash_index btree_index
ok 89        + select_into                                53 ms
ok 90        + select_distinct                            68 ms
ok 91        + select_distinct_on                         22 ms
ok 92        + select_implicit                            38 ms
ok 93        + select_having                              28 ms
ok 94        + subselect                                 131 ms
ok 95        + union                                     103 ms
ok 96        + case                                       45 ms
ok 97        + join                                      270 ms
ok 98        + aggregates                                255 ms
ok 99        + transactions                              112 ms
ok 100       + random                                     45 ms
ok 101       + portals                                   105 ms
ok 102       + arrays                                    156 ms
ok 103       + btree_index                               375 ms
ok 104       + hash_index                                322 ms
ok 105       + update                                    206 ms
ok 106       + delete                                     28 ms
ok 107       + namespace                                  46 ms
ok 108       + prepared_xacts                             59 ms
# parallel group (20 tests):  init_privs drop_operator security_label tablesample lock password collate replica_identity groupingsets object_address matview identity spgist generated_stored rowsecurity gin gist join_hash brin privileges
ok 109       + brin                                      620 ms
ok 110       + gin                                       367 ms
ok 111       + gist                                      397 ms
ok 112       + spgist                                    303 ms
ok 113       + privileges                                701 ms
ok 114       + init_privs                                 22 ms
ok 115       + security_label                             40 ms
ok 116       + collate                                   122 ms
ok 117       + matview                                   288 ms
ok 118       + lock                                       84 ms
ok 119       + replica_identity                          131 ms
ok 120       + rowsecurity                               359 ms
ok 121       + object_address                            253 ms
ok 122       + tablesample                                55 ms
ok 123       + groupingsets                              179 ms
ok 124       + drop_operator                              25 ms
ok 125       + password                                   98 ms
ok 126       + identity                                  284 ms
ok 127       + generated_stored                          327 ms
ok 128       + join_hash                                 612 ms
# parallel group (2 tests):  brin_bloom brin_multi
ok 129       + brin_bloom                                 38 ms
ok 130       + brin_multi                                 80 ms
# parallel group (17 tests):  async collate.icu.utf8 dbsize collate.utf8 tidscan tidrangescan tid alter_operator tsrf misc sysviews create_role incremental_sort alter_generic misc_functions create_table_like merge
ok 131       + create_table_like                         190 ms
ok 132       + alter_generic                             122 ms
ok 133       + alter_operator                             69 ms
ok 134       + misc                                       83 ms
ok 135       + async                                      22 ms
ok 136       + dbsize                                     34 ms
ok 137       + merge                                     193 ms
ok 138       + misc_functions                            125 ms
ok 139       + sysviews                                   90 ms
ok 140       + tsrf                                       72 ms
ok 141       + tid                                        64 ms
ok 142       + tidscan                                    59 ms
ok 143       + tidrangescan                               62 ms
ok 144       + collate.utf8                               40 ms
ok 145       + collate.icu.utf8                           20 ms
ok 146       + incremental_sort                          100 ms
ok 147       + create_role                                89 ms
# parallel group (7 tests):  collate.linux.utf8 collate.windows.win1252 amutils psql_crosstab rules psql stats_ext
ok 148       + rules                                     247 ms
ok 149       + psql                                      256 ms
ok 150       + psql_crosstab                              43 ms
ok 151       + amutils                                    27 ms
ok 152       + stats_ext                                 514 ms
ok 153       + collate.linux.utf8                         16 ms
ok 154       + collate.windows.win1252                    16 ms
ok 155       - select_parallel                           287 ms
ok 156       - write_parallel                             33 ms
ok 157       - vacuum_parallel                            37 ms
# parallel group (2 tests):  subscription publication
ok 158       + publication                               108 ms
ok 159       + subscription                               31 ms
# parallel group (17 tests):  advisory_lock portals_p2 xmlmap combocid functional_deps tsdicts dependency equivclass select_views guc window indirect_toast tsearch bitmapops cluster foreign_data foreign_key
ok 160       + select_views                               70 ms
ok 161       + portals_p2                                 40 ms
ok 162       + foreign_key                               391 ms
ok 163       + cluster                                   169 ms
ok 164       + dependency                                 67 ms
ok 165       + guc                                        73 ms
ok 166       + bitmapops                                 148 ms
ok 167       + combocid                                   46 ms
ok 168       + tsearch                                   143 ms
ok 169       + tsdicts                                    61 ms
ok 170       + foreign_data                              197 ms
ok 171       + window                                    133 ms
ok 172       + xmlmap                                     41 ms
ok 173       + functional_deps                            49 ms
ok 174       + advisory_lock                              31 ms
ok 175       + indirect_toast                            134 ms
ok 176       + equivclass                                 62 ms
# parallel group (9 tests):  jsonpath_encoding json_encoding jsonpath sqljson sqljson_jsontable json sqljson_queryfuncs jsonb_jsonpath jsonb
ok 177       + json                                       50 ms
ok 178       + jsonb                                      95 ms
ok 179       + json_encoding                              13 ms
not ok 180   + jsonpath                                   23 ms
ok 181       + jsonpath_encoding                          11 ms
not ok 182   + jsonb_jsonpath                             59 ms
ok 183       + sqljson                                    35 ms
ok 184       + sqljson_queryfuncs                         52 ms
ok 185       + sqljson_jsontable                          38 ms
# parallel group (18 tests):  prepare returning limit conversion plancache temp xml rowtypes sequence with polymorphism copy2 rangefuncs truncate largeobject domain plpgsql alter_table
ok 186       + plancache                                  77 ms
ok 187       + limit                                      68 ms
ok 188       + plpgsql                                   236 ms
ok 189       + copy2                                     142 ms
ok 190       + temp                                      104 ms
ok 191       + domain                                    169 ms
ok 192       + rangefuncs                                149 ms
ok 193       + prepare                                    32 ms
ok 194       + conversion                                 71 ms
ok 195       + truncate                                  148 ms
ok 196       + alter_table                               471 ms
ok 197       + sequence                                  125 ms
ok 198       + polymorphism                              134 ms
ok 199       + rowtypes                                  116 ms
ok 200       + returning                                  48 ms
ok 201       + largeobject                               163 ms
ok 202       + with                                      127 ms
ok 203       + xml                                        98 ms
# parallel group (13 tests):  predicate hash_part reloptions partition_info explain compression memoize partition_aggregate indexing partition_prune partition_join tuplesort stats
ok 204       + partition_join                            272 ms
ok 205       + partition_prune                           268 ms
ok 206       + reloptions                                 38 ms
ok 207       + hash_part                                  28 ms
ok 208       + indexing                                  261 ms
ok 209       + partition_aggregate                       227 ms
ok 210       + partition_info                             41 ms
ok 211       + tuplesort                                 293 ms
ok 212       + explain                                    42 ms
ok 213       + compression                                70 ms
ok 214       + memoize                                    80 ms
ok 215       + stats                                     589 ms
ok 216       + predicate                                  23 ms
# parallel group (2 tests):  oidjoins event_trigger
ok 217       + oidjoins                                   69 ms
ok 218       + event_trigger                              78 ms
ok 219       - event_trigger_login                        17 ms
ok 220       - fast_default                               50 ms
ok 221       - tablespace                                113 ms
1..221
# 2 of 221 tests failed.
# The differences that caused some tests to fail can be viewed in the file "/Users/flo/postgres/src/test/regress/regression.diffs".
# A copy of the test summary that you see above is saved in the file "/Users/flo/postgres/src/test/regress/regression.out".
